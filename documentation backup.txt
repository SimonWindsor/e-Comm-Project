openapi: 3.0.3
info:
  title: Daintree Store - OpenAPI 3.0
  description: This is a protoype for an e-Commerce web application.
  version: 1.0.11
paths:
  /items:
    get:
      summary: Gets all items
      description: Retrieves all items from the store
      operationId: getAllItems
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
              examples:
                Array of items:
                  value: >-
                    [{"id":1,"description":"Eliminates any itch, especially on
                    your back","num_available":32,"price":"$6.00","name":"Back
                    Scratcher"},{"id":5,"description":"Your canine will want
                    even more walks
                    now!","num_available":27,"price":"$29.99","name":"Dog
                    Leash"},{"id":6,"description":"Curl, Straighten, any style
                    can be
                    yours!","num_available":85,"price":"$59.99","name":"Hair
                    Styling Wand"},{"id":7,"description":"Troll your friends, or
                    ust use as a
                    doll","num_available":45,"price":"$12.99","name":"Troll
                    Doll"},{"id":2,"description":"Your cat will love
                    it!","num_available":20,"price":"$12.99","name":"Cat
                    Post"},{"id":3,"description":"Great for novice mechanics and
                    DIY","num_available":39,"price":"$89.99","name":"Drivers and
                    Sockets"},{"id":4,"description":"More sponges for
                    less!","num_available":14,"price":"$13.99","name":"30
                    Scouring Sponges"}]
        '404':
          description: No items found
      tags:
        - items
  /items/{itemId}:
    get:
      summary: Gets specific item
      description: Retrieves a specific item using its ID
      operationId: getItemById
      parameters:
        - name: itemId
          in: path
          description: ID of the item to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
              examples:
                Item object:
                  value: >-
                    {"id":1,"description":"Eliminates any itch, especially on
                    your back","num_available":32,"price":"$6.00","name":"Back
                    Scratcher"}
        '404':
          description: Item not found
      tags:
        - items
  /items/search/{searchTerms}:
    get:
      summary: Searches for items
      description: Retrieves items based on search terms
      operationId: searchItems
      parameters:
        - name: searchTerms
          in: path
          description: Search terms to use for searching items
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
                example: [{"description":"Great for novice mechanics and DIY","num_available":39,"price":"$89.99","name":"Drivers and Sockets","id":"e64bea73-2500-42f7-94a8-7c69b2ceaf9e"}]
        '404':
          description: No items found
      tags:
        - items
  /users/{username}:
    get:
      summary: Gets a user's profile
      description: Gets items based on search terms
      operationId: getUserProfile
      responses:
        default:
          description: Default error sample response
      parameters:
        - name: username
          in: path
          description: The username of the user whose profile page is to be viewed
          required: true
          schema:
            type: string
      tags:
        - users
  /reviews:
    post:
      summary: Adds a new item review
      description: Users may wish to create reviews for items that they have purchased
      operationId: createReview
      responses:
        default:
          description: Default error sample response
          content:
            application/json:
              examples:
                New Review:
                  value:
                    {"rating":5,"review":"Item is amazing! CAn;t see where I would be without it!","timestamp":"2024-04-17T12:18:43.325Z","user_id":"be680fa4-3cc0-4a5b-b4e3-356976279572","item_id":"e64bea73-2500-42f7-94a8-7c69b2ceaf9e","id":"c367347d-f569-41f6-a9ee-9d0c886c0ff2"}
      parameters:
        - name: review
          in: header
          description: json object containing itemId, rating and review
          required: true
          schema:
            type: object
            example:
              itemId: be680fa4-3cc0-4a5b-b4e3-356976279572
              rating: 5
              review: Item is amazing! Can't see where I would be without it!
      tags:
        - reviews
  /reviews/items/{itemId}:
    get:
      summary: Gets an item's reviews
      description: Gets specific item and all the reviews for that item
      operationId: getItemReviews
      responses:
        default:
          description: Default error sample response
          content:
            application/json:
              examples:
                Array of reviews:
                  value: >-
                    [{"rating":5,"review":"Works great when doing work on the
                    ute! Highly
                    Recommended!","timestamp":"2024-04-17T12:18:43.325Z","user_id":"be680fa4-3cc0-4a5b-b4e3-356976279572","item_id":"e64bea73-2500-42f7-94a8-7c69b2ceaf9e","id":"c367347d-f569-41f6-a9ee-9d0c886c0ff2"}]
      parameters:
        - name: itemId
          in: path
          description: ID of the item
          required: true
          schema:
            type: string
      tags:
        - items
        - reviews
  /reviews/{reviewId}:
    get:
      summary: Gets a review
      description: Gets specific reviews by review ID
      operationId: getReview
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              examples:
                Review object:
                  value: >-
                    {"rating":5,"review":"Works great when doing work on the
                    ute! Highly
                    Recommended!","timestamp":"2024-04-17T12:18:43.325Z","user_id":"be680fa4-3cc0-4a5b-b4e3-356976279572","item_id":"e64bea73-2500-42f7-94a8-7c69b2ceaf9e","id":"c367347d-f569-41f6-a9ee-9d0c886c0ff2"}
        default:
          description: Default error sample response
      parameters:
        - name: reviewId
          in: path
          description: ID of the review
          required: true
          schema:
            type: string
      tags:
        - reviews
    put:
      summary: Edits an item review
      description: >-
        A user may wishto update a review they have made for a particular item.
        This allows such an update
      operationId: updateReview
      responses:
        default:
          description: Default error sample response
          content:
            application/json:
              examples:
                Review object:
                  value: >- 
                    {"item_id":"e64bea73-2500-42f7-94a8-7c69b2ceaf9e", "user_id": "be680fa4-3cc0-4a5b-b4e3-356976279572", "rating":4,"review":"Was pretty good! Just had to change from 3 to 4", "id":"c367347d-f569-41f6-a9ee-9d0c886c0ff2"}
      parameters:
        - name: reviewId
          in: path
          description: ID of the review
          required: true
          schema:
            type: string
        - name: review
          in: header
          description: updated review
          required: true
          schema:
            type: object
            example:
              rating: 4
              review: "Was pretty good! Just had to change from 3 to 4"
      tags:
        - reviews
    delete:
      summary: Deletes an item review
      description: >-
        A user may wish to delete a reivew they have made. This operation allows
        for this
      operationId: deleteReview
      responses:
        default:
          description: Default error sample response
      parameters:
        - name: reviewId
          in: path
          description: ID of the review
          required: true
          schema:
            type: string
      tags:
        - reviews
  /reviews/users/{username}:
    get:
      summary: Gets all a user's reviews
      description: Gets specific reviews by review ID
      operationId: getUserReviews
      responses:
        default:
          description: Default error sample response
          content:
            application/json:
              examples:
                Array of reviews:
                  value: >-
                    [{"rating":5,"review":"Works great when doing work on the
                    ute! Highly
                    Recommended!","timestamp":"2024-04-17T12:18:43.325Z","user_id":"be680fa4-3cc0-4a5b-b4e3-356976279572","item_id":"e64bea73-2500-42f7-94a8-7c69b2ceaf9e","id":"c367347d-f569-41f6-a9ee-9d0c886c0ff2","username":"J-Smitty"}]
      parameters:
        - name: username
          in: path
          description: username whose reviews are to be obtained
          required: true
          schema:
            type: string
      tags:
        - users
        - reviews
  /purchases:
    get:
      summary: Gets all a user's purchases
      description: Gets all user's purchases from the user object
      operationId: getAllPurchases
      responses:
        default:
          description: Default error sample response
          content:
            application/json:
              examples:
                Array of purchases:
                  value: >-
                    [{"id":"2d0b4c02-5130-4013-aaa2-95824c44a683","user_id":"2d0b4c02-5130-4013-aaa2-95824c44a683","timestamp":"2024-04-17 22:12:40.125351","items":[{"item":"e64bea73-2500-42f7-94a8-7c69b2ceaf9e","quantity":1}], "delivery_address_id": "6cb71fda-46ad-4d6a-ac9c-69f5280ab368"}]
      tags:
        - purchases
  /purchases/{purchaseId}:
    get:
      summary: Gets a purchase by purchase ID
      description: >-
        Gets a specific purchase based on the purchase id. Will only work if
        purchase is made by currently logged-in user
      operationId: getPurchase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              examples:
                Purchase object:
                  value: >-
                    {"id":"2d0b4c02-5130-4013-aaa2-95824c44a683","user_id":"2d0b4c02-5130-4013-aaa2-95824c44a683","timestamp":"2024-04-17 22:12:40.125351","items":[{"item":"e64bea73-2500-42f7-94a8-7c69b2ceaf9e","quantity":1}], "delivery_address_id": "6cb71fda-46ad-4d6a-ac9c-69f5280ab368"}

        default:
          description: Default error sample response
      parameters:
        - name: purchaseId
          in: path
          description: ID of the purchase
          required: true
          schema:
            type: string
      tags:
        - purchases
  /cart:
    summary: The cart of the current user
    description: >-
      While logged in, the user will have a "cart" of all the items they are
      wishign to purchase. The items and their quantities can be edited
    get:
      summary: Shows the user's cart
      description: >-
        Shows all items and the quanitites the user currently has selected as
        wishing to purchase
      operationId: getCart
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              examples:
                Cart Array:
                  value: >-
                    {"user_id":"2d0b4c02-5130-4013-aaa2-95824c44a683","items":[{"item":"e64bea73-2500-42f7-94a8-7c69b2ceaf9e","quantity":1}]}
        default:
          description: Default error sample response
      tags:
        - cart
    put:
      summary: Edits the quanitity of the item in user's cart
      description: User can modify the quantity of the items in their cart
      operationId: updateCartItem
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              examples:
                Cart Array:
                  value: >-
                    {"user_id":"2d0b4c02-5130-4013-aaa2-95824c44a683","items":[{"item":"e64bea73-2500-42f7-94a8-7c69b2ceaf9e","quantity":2}]}
        default:
          description: Default error sample response
      parameters:
        - name: new item value
          in: header
          description: json object of an item
          required: true
          schema:
            type: object
            example:
              item: e64bea73-2500-42f7-94a8-7c69b2ceaf9e
              quantity: 2
      tags:
        - cart
    post:
      summary: Adds item to cart
      description: >-
        User will be viewing an item and from there they can add it to their
        cart. A stringified json object will be used to send the item name with
        quanity
      operationId: addItemToCart
      parameters:
        - name: item
          in: header
          description: json of the item to retrieve
          required: true
          schema:
            type: object
            example:
              item: e64bea73-2500-42f7-94a8-7c69b2ceaf9e
              quanity: 1
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              examples:
                Cart Array:
                  value: >-
                    {"user_id":"2d0b4c02-5130-4013-aaa2-95824c44a683","items":[{"item":"e64bea73-2500-42f7-94a8-7c69b2ceaf9e","quantity":2}]}
        default:
          description: Default error sample response
      tags:
        - cart
    delete:
      summary: Removes item from cart
      description: >-
        From the page of the item being viewed, a user can remove from their
        cart if they wish
      operationId: removeFromCart
      parameters:
        - name: item
          in: header
          description: json of the item to delete
          required: true
          schema:
            type: object
            example:
              item: e64bea73-2500-42f7-94a8-7c69b2ceaf9e
              quanity: 1
      responses:
        default:
          description: Default error sample response
      tags:
        - cart
  /cart/clear:
    summary: For clearning the user's cart
    description: For the user to delete all cart contents
    delete:
      summary: Removes all items from the cart
      description: For clearing entirety of cart
      operationId: clearCart
      responses:
        default:
          description: Default error sample response
      tags:
        - cart
  /checkout:
    summary: For checking out items before purchase
    description: For viewing, editing and removing items from the checkout
    get:
      summary: Shows everything in the cart before purchase
      description: >-
        Allows the user to review all items in cart immediately before
        finaiizing a purchase
      operationId: getCheckout
      responses:
        default:
          description: Default error sample response
      tags:
        - checkout
    put:
      summary: Edits item details in checkout
      description: >-
        Allows user to update number of a particular item they have in their
        cart right before purchase
      operationId: updateCheckoutItem
      responses:
        default:
          description: Default error sample response
      tags:
        - checkout
    delete:
      summary: Removes item from cart at checkout
      description: >-
        Allows user to remove a particular item they have in their cart right
        before purchase. Item 
      operationId: removeItemFromCheckout
      responses:
        default:
          description: Default error sample response
      tags:
        - checkout
  /checkout/complete:
    summary: Redirecting after purchase is complete
    description: >-
      After purchase has been finalized, user is directed to a "purchase
      complete" screen
    get:
      summary: Shows user complete purchase
      description: >-
        After user completes a purchase, they are redirected and shown their
        purchasae details
      operationId: completePurchase
      responses:
        default:
          description: Default error sample response
      tags:
        - checkout
        - purchases
